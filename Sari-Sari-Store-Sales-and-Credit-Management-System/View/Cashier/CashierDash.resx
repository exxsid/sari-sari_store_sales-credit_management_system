<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAMgAAADICAYAAACtWK6eAAAABGdBTUEAALGPC/xhBQAAHNtJREFUeF7t
        nXusbVdVh000xhijpm0klRCCtxqMKdBH1ERMsP0HFUwspsRIjLQxgjaxvQkl0aoUtEFQ6UNIbGMfUEIL
        FFogYqk2F4qpwMXGCJSK0PIQQwl92IItPrb32/f8TscZZ8y51zx77X3m2mf8kpF7z1hzz7X2WuObc8y5
        5lr7O2apVKqoBCSVqigBSaUqSkBSqYoSkFSqogQklaooAUmlKkpAUqmKEpBUqqIEJJWqKAFJpSpKQFKp
        ihKQVKqiBCSVqigBSaUqSkBSqYoSkFSqogQklaooAUmlKkpAUqmKEpBUqqIEJJWqKAFJpSpKQFKpihKQ
        VKqiBGSP+vLj/zu75QtPbv31lD7z0P/Mfu3Ox2aPPvl/W57jwh+VX6QjH753dtttn5xd+tr3zs55yeWz
        s86+bNvOOPOS2Xd+16/PDp1yeIcfo/wNN9w1//zDDz++VVuqVQnIHkSwv+D9j87/tQKAEhwXf+ybW389
        Jfx//E/f2vprNrv//gfnQX3e+dfMg57gH8tOPOkVc8CuuPL22T33PLC1x9QiJSAFEbx/cix4//Fr/73l
        OS7+LsHx4tv/M4SjBA1wEKyHD799uzf4wbPePPu+57xuV4CPbQADiPROqbISkEAE+4/e/MiulEj+oXCU
        /B/74mOzX7nus9tQyIADsz7se06+cJdvTKO3AtLsWXYrAXFaBEfkP/09j8zHJFb4PRykUC+98F2zZ7zm
        6Oy7f+C3dgRpCY7vPfR7s+//6T/b5V+VMX45cuQzW0ecSkCMBIEdF6BFcCzqUQCDdIZgHwMO//lVWIJy
        XAcSEAI3avGBwA+ml4GD2SPAIOAYV7TAUfJTz6pTLmuAcpBTrwMHyIe+8u0iBEPhuP6+JxbCwWwRA2GC
        jEB/5hs/vQuOH3r5rU1w0JvQq3j/OowxykGcLj4wgBC0L7vzsV3jgis/9V9NcLz6WLkSHPg/evSL81ZX
        gVWC4+Tfub0JDnwRHPQm6+pRGMzfeuvRrW98MHQgAGFq9oxjwevhINgjOJjebYEDyPD/6Vs/vt1rYDU4
        nnas97A+rAZH5F8nHNboTQ6KNh4QBftQOOQn6K1KcOA/7ZZH5rNTNogI6Ge9+QshHCdfcPsOH0b5kj+C
        o5RuAYzf5yqMKWomHzZdGw2Igr0VjpI/6lGe9+6HZ6f9wpU7goeAPnTdf+wK4LHgwBfdTGR/6+xR6C03
        PeXaWEAWwdEKTQTHc9/18Oxpz3vtjqBpheOkc9/RDEfk388B/PXXf2TrrGyeNg4Qgv6VH318X+BgVsrD
        QbpTgqPmHwMOfOtIt7BNhWSjACHof+lY8BPUjBfsvY4WOCxkERyn3vSNXXAQ1BEcz3zDpzYeDhn3fDZN
        GwOIh0ODaeu3cPBvCQ6Vj+DAf/LZV+0IjDHhOOml79jlL8GBLxqL4IvgWAcwm9aTbAQge4FD/iFwWP8P
        v+j4nXFZDY7SFO/TL75rh0/+CBrGKCU4Iv8JL742BCECaVW2SZBMHhAbvK1w4Jes/7r7ntjyLoYDvw2+
        RXCU/GOkW9xb2W84ZJsyuzV5QJT2lODg2Y0SHJG/1KM85zdu2hEAgsMG6thwRDcTS8tTKBuNRUo9yqqN
        KeBNWMM1aUC0TKQEx1jp1i/+wR3bF55ga4Gj5n/6qz7SPEYZA4519SjcTJz6+q3JAkLg1yAYC47Db/uX
        7QuuYMdvA5XgfNZffr4JDvyrgoP6S3Csu0eZ+szWJAEhgH/uA4/OA1WDaWBogYPtrM/CX4LjTUe+ur22
        SkGN38Nx6LqvdgUHddh9yvYr3ZryoH2SgPBAE4Fq4VCwWzj4VyANgQO/7VG0KldBjT+Cw6+5UvkaNPLJ
        anD4sQj1MBM2Bhy+jlUYjcxUU63JAcLKXAJ1CBzyD4XD+mn1uLgKavwRHKUpXvw2IOVftkehPA9ejQHH
        OnuUl5939daZnpYmBwgtfAscJT9vGpGsHzho7Wj1CB7BYVvxIXBE/qFw4C/BQXnunns/PYqtW9YDHLIp
        PsI7KUAAI4ID0+t5hsCxqEe56KIbt4MRvw3UEhz8fy9wtECD349F8I/Vo6zamNWamiYDCAEdQYCNmW7x
        jAPBxqwUfhuoTI+W4Kj59wOO6Pl3rATHuqZ+pzZgn1yK1QoHz6APhQOd+7vvnAc1fhuoBCe+XuCgfuqw
        +8QoH0GD9ZBu8djulDS5FIsglQkOPVKLz8Jhy5fgeOVdT82u/N2nv94VHDz8VIKDmTO7T4x6Sj0KiyDt
        PmX7kW5NqReZDCAlOKx/CBw1aH78xgfn/ggOzKYhgqAFmhoc3q96xoADf/Sk4X6NRabUi0wCkCFwYMvA
        cfotx/0lOGygKnjx2xkl+ZftUVR+LDgifwQHf69rLDKVxYzdA0LwKkixEhyRnx5FD03V4FC6ZQN1CByR
        vwSHv5mIP1qeovI+3ZLfBzD+Vjio2+5TfqCxvlXaVO6LdA+I7ppjeiXoUDgW9Sh27PLsq/51O2hKcJT8
        9CI1OIb2KPKX4LD7lL+1R4nul/D3OuGQTeHueveAaKmIZprGgsP6X/j+h7aDhuXk8g+BQ/79gAN/dNOw
        tUfxS1nWZVMYrHcNiJaVLIJDz4Rgexmo//7r3je/YNy9lr8HOFS/3Sem8t6/FziidMuXW5VN4cZh14CQ
        UgkOvQBOtggOPSsifwkO/FyovcKB2YBS8Jbg8GMR6hkDDvwt6RazWiU41tmj9J5mdQ2IHn21EGCL4Gjp
        UbhAFg4bHBYCG5CL/EN7FJUfA47IX4KDv/HvNxxY77NZ3Y9BPBx6JegycNjHcH/1XV/a9ttAVZDW/DYg
        5fcQlJanqLx/gYP8tm6Mz7bAgZ9Uzu5T/l7gwFj31rO6BsTDoXTL+xf1KBaOEkwWAjtQb4EDs9Ow8pfg
        8GMR+X2gys+/1k+dJTiidIu/e4ID630c0i0gdgyB7RUOO3aRn96jBIdNt0p+G5AK3pK/FQ67T+u3dWPU
        WetRSvdLhsKBH/P+VVjP45BuAeF5DQIDAw6CWm87lC2CI/JTj54axHqAg3df4S/B4f3U2Zpu0aP45SZA
        VIJjnT1Kz8+JdAsIgYEJDhvU2Bhw/Pbff2P7Iq0ajhNe9Ndzv4dD9Q+FQzcl7T6xRXDYY8Eox7FYH7Zu
        OLDLr/jb+TXrUV0CQiATHDU4Ij9L29EQOKiblosLNAQO+0pQtfiYDUgFNWZTHNWzLBzy+7veJTj4uwbH
        0HRr1Xbppe+ZX7ce1SUg3CBshaPWo/jymuLlwlgI7IzSEGhsQCp4vX9sOLxfs2R2nxh/+15M/hIcfkZt
        XXbWWZfNr12P6hIQFhhGEHBfZCgcGKCV4MBeePW9234bNK1wlJanqDyBOgSO1rGI/Haf8rfAQdoWDeD9
        MpZVWc8zWd2mWB6CRT2KhyPqaSwc1q+gwXjbofwlOGwaUoLGwmEDVf6xehS7T/lb4Kj5/T5Xab2qS0Ci
        Kd4aHJGf1EoLHbEhcPBshvwlOEp+G6h7haN007AEhx8v4J8iHFiv6h6QvcKhZexYCY6feMu/rQUOW38J
        Du+nTvwlOEp+eywY6V/vcGC9qmtAgINgXwUc+F/w83++I3ixvcJBPc94zSfmvmXhkH8oHJpC9nBQT2uP
        sh9wYL2qW0AEhw12rNaj+PJacxXBgQ9ALBwEDRfLBjVWgkMpji0/FhwMmuXDSnCo/Bhw6Pvvh/WqLgEh
        0JeFozTFi1/QkGLJr6CxQY0pIPFbOKx/bDi8X7NkY8CB399Rr0Hjl6ysynpVt4AMhYNnRkpwYHagXoJm
        CBxD/JoWtX5u1PG397dCsywcNX8JDr/PVVqv6n6QjindssEuv32uHLNwDPGX4GiFRoFq/WP1KJsOB9ar
        ugSEG4IEACY4oh6F1Mr6WuEozWLtFQ4CcBEc+PlbgaFgb4XGLjdhew2CFjhK/lVbr+oSEPss+qrgYKB+
        watungdCCxx626H8Fg6WfOCrwWH9uinZCodt3W39U4XjRw71+yK5bgHhlaCrhINxyIWv/1ATHBYCbBk4
        5B8CB/9qCrkER0u61RMcWK7F2oM+/uDOsQUWwYEB1FA4rP+573xo21+CQ/5VwIFfM0r4S3Co/BhwtEDj
        612V9fzYbbeAcA+Diy8rwYHPD9Qxlr4PhcZCoJ898P4WOPh3CByRfxk48Ctti/wtcOBf18vk8nmQPcg+
        UUhKdOPnnhq4y4CjBI392QOsBIemYQkcC0EJjlK6pfsF1r9uOGr+VjjWufQ9nyjcgzTVCxx/dHTnO7Gw
        GhzeX0u3Dj3/DbuCvRWORT2KDd6Sv3S/ZBVw4KdHsfuUlaBZpfGjRb2qW0DoAYDj8N07l7FjY8GBz/5g
        DrYIDgJQPiyCA4tuGrZCY5ebsF3p37JwlPxMBKwbjp5nsFC3gDDLtGo4sFNv+sa2X8FBoC0DR+QfAoed
        QraBauuxj/7aepaFA/+64cB6f8t7t4AgP1DfCxxDoVG64SFYFxy2fAmO1nRLdVt/T3Bgvb/AumtAmLni
        QmOsuRoKR8kvOPys14+99WvzoFkFHN6vNGksOPwd9Ro0Q+Gw/1+19Tz+QF0DwjiEiw0o/uXV8rfCEfnP
        v+R9uyDQLI73K/BKfhvUJf8ycAzxa59YKxyUWdcM1uln5NvdlxY9h3/eHAOOyB/BgdFrlKB505HjgSVT
        0HgI9PzHpsCB38NBPXacs0rr+f6H1D0gUbC3whH5Sz2KAtW++wpTQC4DBxbdL7Fw6DU++JeBw/rtMx2a
        CPDQqPw673/0nl6h7gHhFUBcZNmYcFxvVg1jClTuBVh/CQ759bZD+VugIVC13MTWPxYckb8EhwV11fbL
        51y+dYX7VveAIBYucrFrcPhnSOQvweHr0c+wtcLh/QpIG6TWz7/y20C19RCo+Hw9mwIHNpXfSp8EIIwf
        SnDw7EhLj0JdvrxW9z7/L+7Z4W+FQzNKNk3CFKi2fA0OBaoN9hIcdrxg/dqn9fcCR+83B60mAQhisK4g
        ktV6lGjWC38JDu9XQA4di5T8ClTrHwKHTdvsHXXrL0GjfVp/L3BgU+k90GQA8b1BDY6hftKtGhxjpVvW
        PwSOIf5l4FA9+wHHCSe+YuuKTkOTAQTpznoJjtKUcAmOaCxy1i1fnwfNVOCwPYr2iVlotC4MUz37AQfW
        85vcI00KEG4cluBo6VGA4xPHxiL+DSlKt37y9Ud3+Es3DUtwRPdLLBz2ZdfLwGH99jWk+CNoVJ5jsXBo
        Fm3Vxtij91+19ZoUICiarSrBwTMkLzPPlWCL4PD1KFBbexS97VCmQLX1jAVHya99Wr9Pt/i/7WFWab3/
        om2kyQEy9L4IcHgI1gWHL69Atf7WdGsVcADGum4M9vzceU2TAwSpF7no7sdDOP7w6LeWhgP/aT/zul3B
        rhklmyZhq4QDPz7vXwYO+a1vlTaFu+aRJgkIeuM/74YAu+jubzbB8ZVjPVIJmt/84IM7/It6lFY4vF9j
        Aetv7VG0T0xT1CU41rXmamoDc6vJAkKqReArMLAIDuzWB54MoanB0ZpuLQtH5F8GDtVTgsO/HHtVNtXU
        SposIEjL4bESHFcdS8ciOHit0FA4Tv2r4w9TeQhqcPjyy8Bh/RYOOxFg/SpfggO/6l6lcc9jarNWXpMG
        BDEeueAfHi/CYR+MwkpwqEfxv8UONF968LHZKa8+ssNf6lFYboKfFbPyjQXHEGisP7r/4aFZpfX8tpKh
        mjwgyL4iSNYKR+vsFuMFve1QRqB6OLD9gMOmW4IDWxccU1pOUtNGAEIQE8wKgrHgoEcpweEhKMGhQN0v
        OEr+VdqUB+VeGwEIYtkIwV6C4wNfjAfqERz4731490+/Ac0V19/dBAd++8u5gqPkJ8CmDEfvbylp1cYA
        guhJfLolOCJoSnCUBvDRrNciOIb49wqHryfhGF8bBQjy6da1n31iEnDgtz1KwtGHNg4QpJ6klG61wMEK
        4ggOlri87Y7PzQ695f4d/r3CYf16RxdmJwIEjS+/33Bs0pjDayMBkaKHrK69L+5RSgP4I//+7V1+4GPM
        4+sZA46SvwRHNBahjnXBsSmzVSVtNCDI/pxb6+xWNHYh3aK895958R27ghdbBxz4lZ7R+1CHD+SxjaXr
        99zzwNZZ3lxtPCCI1r42u+V/HLQVDtIt0rqfuuHLO/ylHmVsOORnZS5/+2Ae23gjydTvkA/VgQAEEcA+
        5apB0wJHlG5xR52A14NLspYeRXCwrQYHn1/HMx0sHZnCy97G1IEBROKtJgT7KuG48K5H579/OBYcth4P
        B3/zfx/MYxu9xlSXrC+jAweIxNgEIBR4NTjuPDZQHwpHyQ8cBLv9iTfB4e/MaxarBgeP2No3Jq7KGGtM
        8UnAsXRgAUGkXSx2BI6bP797dgs4op9+a4Xjsg/eP/vZc6/e1aMQ4B4CQeP99sm/dTxDDhjMUB2UsUZJ
        BxoQK17uYH+PBGiuuXd5OKi31qMMgUPpVhTIY5vASB1XAuLEMya86pQxigJURo8yBhy8TZ6fXDjlGBDy
        RXAAhpbPR8E8pjHGOMipVEkJSEE8scg4RWu7gOO2B3aPUYADqLyf1G0oNM++8cFtOHjSj0dh+X8UyGMa
        v8+RaVRdCcgAMVZhuQnTxHYxJP8n4PW3rKVHIZXDh/7mznvnyzZ4TDUK6GUNIPjRfnqKhGKYEpA9iqDW
        IB8jLQMYIMKvv2XAgeiVMKabKVcTd6oJZqBhMSDgLIIHCChDysTn6CE24cm+/VICkkpVlICkUhUlIKlU
        RQlIKlVRApJKVZSApFIVJSCpVEUJSCpVUQKSSlWUgKRSFXUNCEskLn3te4uG5ksxnP+gPRa6rA4ffvvs
        rLMvC82v2fJlN31NV7eAcOKjtUYy/e5EtDZJ21KLRSPkz5/M/2SzL8uzI5uubgGpXTiMVamlcgnIcNED
        +/Mn8+fRn+tNfZui1WQBsU+9caHstk1+09/Y4lzZc2fNn0d/TQ7Ck4fdAsLJtxfDm31pGW/bsNtyDDJc
        NUA8AP6a5Ivj9lG1C4d52V6Eli4SF/TIh++dmx3Ue9122yfn/lI9VtR1xZW3b9eloBkyeAVsHY+1KPBK
        ZbGhog59N+2D50bsebXmv7+9Jn58YsV357h0TvS6IJ0n/p3K4H6SgERjDJtL+5PP32ececmOOmR2oEk5
        Zma07cST4t/Yw8eFZrutSzk5x8K2Q6ccnt1ww11znxd1+M9bs5AQYKWyi8ZbOlaORZ+xYwc+b+uz5kUP
        QnmM7+gVnRfti+8DVLZ+ZsR6V7eA1C6cvcBWbItattp4RgHGxY0g8q2ogt+Xs8fk4T7v/Gu2tjwlgt4H
        jDW731q6qcmKSNGx0iDwXSULji/XotL5s+eFMjzxaLf3ng5PEhACMBKfiQKm1hupLttzWFN6gEqB6oMu
        2l8UCLXvaAGpHX/UkqPSseK3ispgajiGChCiegDUnhvOp91eA7wHdQuIPYnefKsu2WC2qgUYAUP3H22z
        vVEtzfHBH+2P1tWrBogVQRSVwaLvXOoxfe9K4EblsNbALZ0bzPeg6kX4/haeHjVJQBjkMQgcenIXtdQA
        wmDVd/82PSi1kJg/jtL+vErlOA6roSBJpbSJ72hVAglTzzpUUR3WgETnSed8CuoSkNqF80bLRXpUO+Et
        AUaLTHCQNtnWudRC+mBGUYBGOb0vI/OBXAp4vpcXKVdUFvNBXzvPpdStpNpsmIxedCpgSF0CUhuUeiNA
        CZRSeoWiz2FRcEu2V6Du6POYD9JS0Pncv1anD+SoDGZ7OClK72Qcm1VL2UXi+9QmHWQ0NP5c9KwuAald
        OFpiWrcaEF5RPVjUAkeqtbS2DqCKBvtRPj+09S6NjzAPEqqlgj7oa2OboemrFcc6BBJsKpB0CQhBF51U
        rHXwWAvEqAWOVGvtSX8kG5z0TvxdSimGtt614/cBj1oAqZ3nvYpzxXeP6rRGT9LSyO2XugSklHNjUatZ
        EzNMUT1YS11D71kMVQ0QGzhDQZJq5f1sG2OCqFwt9YzEcXDTzzYGtd5J1vs9ENQdIHTt0cmUtXbNtRa1
        pa5aPbSGrYPPVQFSS8n4DlZRGWxo6ok4h/qcH9jbbZHx3XpXd4DUZmGw1ta6lka01AW4tV4ESOy6o0Ua
        2tLXjr8EeKn1tulgC0g12dk9eiQ/dqn1JK2N3X6oO0BqgYO1AhLVIWtt9Sk/ZBBKIDJYx5j+jAa8fI/o
        szIFaW36tJbHl8BSK19riFpadiZN7Gf57nb9Gcdnt8ta07j9UneA1FpMgrNldqXWSlLXXsT+Cd4hoFCu
        1qOUGgPqVpDWApkgq50PWmgfwLofU2uIfKpUE+c4GpQLcA+I/W5TUJc9SMmGpi8S5aN6SGFa6/IiMAkk
        1UlLr//jHwoyx8Hx6LOlcQV+ay29H/vgM/a4gEf7tEa5vYjjsXXq/OLnb7a1HHMv6g6QVKonJSCpVEXd
        AkIqcM5LLt8e7PobhHTX2oZFMyLUYZ/2k42tearl9rFsCndQxHnqOfXqFhDyVju4s1OUiClFu53yXuT2
        tgzWMsc/REDo94FNMd9etzhHzMS1ro5Yp7oFhFkQH3QSA0m/rQQIQFiLepplNO/J3D56vuC9iOugeygt
        s2brVreA+B4C0wyL712wCJBUfyKlInW2165ndQtIdJ9BEAwFJHqlpk99aMnw2zvCgIjfrglje9TS4fP7
        GBNW1W+PDx/fwzYiHKsaEL63PXb+X0v5NFZjP5TnuxPI1I/h54EnylhRJ8Fuj4MeVOI48LEdUV7lZLov
        o3301ptMKsXSg0RDAfFlMD94jsoQMASJ9xOkXgSELzcmIFH9BBqB5P0ap0XLOxSkXtRj4dOxR2msv/sd
        XQfdIBRsMhTVqZUG+luf70XdAhIFAMbJrF0YKboY0d3zWplScFpFZdSSjyFfNybVtvk76Hab5BsBvjvn
        F0Xn35/jCESujZ8c0TmNrgnlOadj3LxdhboDRAAgfzIxLmp08WzXjqKL4ctEXb4tY9MUmQJIsq1vqcwy
        8nXbVtxvw6TouKw4Rl/GAhA1QgSxValxABy7/ET1RnVyPXtWd4BwwhSk0QWgSx4S/FGK5GeXonpsGb8N
        8xpSBhD9fZLIfAsaHZ/STOS31eDx5yeaAlfDhAhqv53jsSJt82Xsd+D/6iFQ1OP4OntTd4BwYTjxqNSK
        DQEk+qwNAFQLkiH7WNQDSfh8OW+kIUMA0fHV9h19zqdHgObL2GCNjtnLb4/KWEV12n32qK4AodvXiUPR
        hSaIIr8GqNKQFjBq0dTlRz2QD7LoOCJACGbKegAWqQZ5tG9ti1LQIemRTXcWpWh8F7/dD+K9EpAlZYMS
        WWAwXYAoODCrIRejVqYWnNKQMssoauUJfhTtWxBE2/x3X3TsfhtmNWQc6EUv6T+j79OrugKE1EonThfU
        DvZ0AYcAEm33g+eojPLlKDhtAKGoB/JlllE0SaDzUusho+D3gRj1ABrfRNsw2wNG+/BjPK+oQeKae3h7
        UjeA+JxaraENVAVvCRCd6Cg/x6wWlYkAIe2wQWKBltk0ZRn53lOm/dd6vwgejtULaHyrznkpAWIBiPa/
        qHEoXTeZbhr2pG4AAQhOukwXm4Djb5v/c2FtWYyAVg/BZ/1237oRCLUy7IPeq7Qd2W2YPYZltej4/DZ7
        fvz357hKqQzHy7mnDGXZL6I+fZ7Ap4z9bipvTZ+tCfhs3Rh/c51t49OLukqxUqnelICkUhUlIKlURQlI
        KlVRApJKVZSApFIVJSCpVEUJSCpVUQKSSlWUgKRSFSUgqVRFCUgqVVECkkpVlICkUhUlIKlURQlIKlVR
        ApJKVZSApFIVJSCpVEUJSCpVUQKSSlWUgKRSFSUgqVRFCUgqVVECkkpVlICkUhUlIKlURQlIKlXUbPb/
        jSLGQbAd7Y0AAAAASUVORK5CYII=
</value>
  </data>
</root>