<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>